
load net;
load os;

class Server
{
	routine Start()
	{
#		io.writeln( net.host( '127.0.0.1' ) );
		io.writeln( net.host( 'localhost' ) );
		sock = net.listen( ':10000' );
		for (conn in sock){
			stream = conn.stream;
			message = stream.read();
			io.writeln( conn.addr );
			io.writeln( 'received', message );
			stream.serialize( [1,2;4,5] )
			stream.serialize( (name = "test", index = 123, [10C, 20]) )
			stream.serialize( { (name = "test", index = 123, [10C, 20]) } )
			stream.serialize( { "AA"-> 11, "BB"->22 } )
			stream.serialize( { {1}, {2}, {3} } )
			stream.write( 'TEST' );
			stream.close();
			break;
		}
	}
}

class Client
{
	routine Start()
	{
		sockfd = net.connect( 'localhost:10000' );
		io.writeln( 'sending' );
		sockfd.write( 'TEST' );
		object1 = sockfd.deserialize()
		object2 = sockfd.deserialize()
		object2 = sockfd.deserialize()
		object3 = sockfd.deserialize()
		object4 = sockfd.deserialize()
		message = sockfd.read();
		io.writeln( 'received', object1, object2, std.about(object2), message );
		io.writeln( 'received', object3, object4, std.about(object4), message );
		sockfd.close();
	}
}

server = Server()
server.Start() !!
os.sleep(1);
client = Client()
client.Start() !!
