
# https://github.com/google/gumbo-parser
# commit: 47d36f969f8b9a0852c3ac838ff131c25d7a39ee

project = DaoMake::Project( "GumboParser" )

inclist =
{
	"src/attribute.h",
	"src/parser.h",
	"src/tag_sizes.h",
	"src/utf8.h",
	"src/char_ref.h",
	"src/string_buffer.h",
	"src/tag_strings.h",
	"src/util.h",
	"src/error.h",
	"src/string_piece.h",
	"src/token_type.h",
	"src/vector.h",
	"src/gumbo.h",
	"src/tag_enum.h",
	"src/tokenizer.h",
	"src/insertion_mode.h",
	"src/tag_gperf.h",
	"src/tokenizer_states.h"
}

srclist =
{
	"src/attribute.c",
	"src/parser.c",
	"src/tag.c",
	"src/util.c",
	"src/char_ref.c",
	"src/string_buffer.c",
	"src/tokenizer.c",
	"src/vector.c",
	"src/error.c",
	"src/string_piece.c",
	"src/utf8.c"
}

project.AddIncludePath( "src" )
project.AddCompilingFlag( "-std=c99" )

if( DaoMake::IsPlatform( "UNIX" ) ){
	project.AddCompilingFlag( "-fPIC" )
}else if( DaoMake::IsPlatform( "WIN32" ) ){
	project.AddCompilingFlag( "-U__STRICT_ANSI__" )
}

gumbo_parser_objs = project.AddObjects( srclist, inclist )

gumbo_parser_dll = project.AddSharedLibrary( "gumbo_parser", gumbo_parser_objs )
gumbo_parser_lib = project.AddStaticLibrary( "gumbo_parser", gumbo_parser_objs )
